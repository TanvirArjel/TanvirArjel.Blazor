
@{
    if (PaginationModel.ShowDetails)
    {
        <span style="cursor: default" class="btn rounded-0 border d-block d-lg-inline-block bg-white mb-2 mb-lg-0">
            Showing item @PageItemsStartsAt to @PageItemsEndsAt of @PaginationModel.TotalItems items
        </span>
    }
}


<nav class="d-block @(PaginationModel.ShowDetails ? "d-lg-inline-block float-lg-right float-lg-end" : "text-center")" aria-label="pagination navigation">

    <ul class="pagination justify-content-center mb-0">
        <li class="page-item @PrevDisabled">
            <a class="page-link rounded-0" href="@($"{PageLink}{PaginationModel.PageIndex - 1}")">
                Previous
            </a>
        </li>
        @{

            if (TotalPages > MaxPageLink)
            {
                if (PaginationModel.PageIndex > (MaxPageLink - 2))
                {
                    <li class="page-item">
                        <a class="page-link" href="@($"{PageLink}1")">1</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link">....</a>
                    </li>

                    if (PaginationModel.PageIndex + 2 >= TotalPages)
                    {

                        for (int i = TotalPages - 3; i < TotalPages; i++)
                        {
                            string currentPageCss = "";

                            if (i == PaginationModel.PageIndex)
                            {
                                currentPageCss = "active MakeDisabled";
                            }
                            <li class="@currentPageCss page-item">
                                <a class="page-link" href="@($"{PageLink}{i}")">@i</a>
                            </li>
                        }
                    }
                    else
                    {
                        for (int i = PaginationModel.PageIndex - 1; i <= PaginationModel.PageIndex + 1; i++)
                        {

                            string currentPageCss = "";

                            if (i == PaginationModel.PageIndex)
                            {
                                currentPageCss = "active MakeDisabled";
                            }
                            <li class="@currentPageCss page-item">
                                <a class="page-link" href="@($"{PageLink}{i}")">@i</a>
                            </li>
                        }
                    }
                }

                else
                {
                    for (int i = 1; i <= MaxPageLink - 1; i++)
                    {

                        string currentPageCss = "";

                        if (i == PaginationModel.PageIndex)
                        {
                            currentPageCss = "active MakeDisabled";
                        }
                        <li class="@currentPageCss page-item">
                            <a class="page-link" href="@($"{PageLink}{i}")">@i</a>
                        </li>
                    }
                }
            }
            else
            {
                for (int i = 1; i <= TotalPages; i++)
                {
                    string currentPageCss = "";

                    if (i == PaginationModel.PageIndex)
                    {
                        currentPageCss = "active";
                    }
                    <li class="@currentPageCss page-item">
                        <a class="page-link" href="@($"{PageLink}{i}")">
                            @i
                        </a>
                    </li>
                }
            }

        }



        @{
            string hideDotCss = "";
            if (TotalPages <= MaxPageLink)
            {
                hideDotCss = "d-none";
            }
            else
            {
                if (PaginationModel.PageIndex + 2 >= TotalPages)
                {
                    hideDotCss = "d-none";
                }
            }


            <li class="@hideDotCss page-item">
                <a class="page-link">....</a>
            </li>

            if (TotalPages > MaxPageLink)
            {

                string currentPageCss = "";

                if (PaginationModel.PageIndex == TotalPages)
                {
                    currentPageCss = "active MakeDisabled";
                }
                <li class="@currentPageCss page-item">
                    <a class="page-link" href="@($"{PageLink}{TotalPages}")">@TotalPages</a>
                </li>
            }
        }


        <li class="page-item @NextDisabled">
            <a class="page-link rounded-0" href="@($"{PageLink}{PaginationModel.PageIndex + 1}")">
                Next
            </a>
        </li>
    </ul>
</nav>